version: 2.1

executors:
  gradle_docker:
    docker:
      # This image isn't used to build Java project, rather to invoke Docker with Gradle.
      # The version of Docker on cimg/openjdk tends to be slightly behind cimg/base.
      - image: cimg/openjdk:14.0.2
  helm:
    docker:
      - image: hypertrace/helm-gcs-packager:0.3.0

commands:
  gradle:
    description: 'Run the provided gradle command'
    parameters:
      args:
        type: string
      when:
        default: "on_success"
        type: enum
        enum: ["on_fail", "on_success", "always"]
    steps:
      - run:
          name: << parameters.args >>
          command: ./gradlew << parameters.args >> --info --max-workers=2 -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.console=plain
          when: << parameters.when >>
  setup_build_environment:
    description: 'Checkout, restore the cache, and setup docker'
    steps:
      - checkout
      - restore_cache:
          keys: # Use gradle version for cache, so it doesn't download every time
            - v1-dependencies-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}
      # The remote docker version is independent from what's installed in the gradle_docker image and defaults to Docker 17.
      #   Use the latest value from https://circleci.com/docs/2.0/building-docker-images/#docker-version
      - setup_remote_docker:
          version: 19.03.12
  save_populated_cache:
    description: "Save the gradle binary to the cache so it doesn't have to redownload"
    steps:
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "./gradle/wrapper/gradle-wrapper.properties" }}

jobs:
  build:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerBuildImages
      - save_populated_cache
  merge-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerPushImages
  release-publish:
    executor: gradle_docker
    steps:
      - setup_build_environment
      - gradle:
          args: dockerPushImages
  validate-charts:
    executor: helm
    steps:
      - checkout
      - run:
          name: Helm Charts Lint and Template Render
          command: |
            helm lint --strict ./helm/
            helm lint --strict ./helm/ --set replicaSet.enabled=true --set backup.enabled=true
            helm template --dry-run ./helm/ --set replicaSet.enabled=true --set backup.enabled=true
  release-charts:
    executor: helm
    steps:
      - checkout
      - run:
          name: Add release tag
          command: |
            git config --global user.email "${CIRCLE_USERNAME}@hypertrace.org"
            git config --global user.name "$CIRCLE_USERNAME"
            git tag -am "Released by $CIRCLE_USERNAME" $(git describe --abbrev=0 --tags | sed 's/^release-//')
      - run:
          name: Remove trigger tag
          command: git tag -d release-$(git describe --abbrev=0)
      - run:
          name: Package and Publish Helm Charts
          # Read the "name:" from Chart.yaml. The chart version is <chart-name>-<semver git tag>
          command: |
            CHART_VERSION=$(git describe --abbrev=0)
            CHART_NAME=$(awk '/^name:/ {print $2}' ./helm/Chart.yaml)
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/helm-gcs-key.json
            echo ${HELM_GCS_CREDENTIALS} > ${GOOGLE_APPLICATION_CREDENTIALS}
            helm repo add helm-gcs ${HELM_GCS_REPOSITORY}
            helm package --version ${CHART_VERSION} --app-version ${CHART_VERSION} ./helm/
            helm gcs push ${CHART_NAME}-${CHART_VERSION}.tgz helm-gcs --public --retry
      - add_ssh_keys:
          fingerprints:
            - '5e:5d:02:29:b8:8b:08:5b:b0:d3:20:b9:36:d4:72:00'
      - run:
          name: Update remote tags
          command: git push origin refs/tags/$(git describe --abbrev=0) :refs/tags/release-$(git describe --abbrev=0)

workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - validate-charts
      - merge-publish:
          context: hypertrace-publishing
          requires:
            - build
            - validate-charts
          filters:
            branches:
              only:
                - main
      - release-publish:
          context: hypertrace-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
      - release-charts:
          context: hypertrace-publishing
          requires:
            - release-publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
